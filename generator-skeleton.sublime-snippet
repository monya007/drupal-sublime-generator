<snippet>
  <tabTrigger>generator-skeleton</tabTrigger>
  <content><![CDATA[
namespace Drupal\\${1:module}\Plugin\\${2:plugin};

use ${3:pluginInterface};

use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;

class ${TM_FILENAME/(\w+)\.php/\1/g} implements ${3:pluginInterface}, ContainerFactoryPluginInterface {

  /**
   * Constructs a new ${TM_FILENAME/(\w+)\.php/\1/g} object.
   *
   * @param array \$configuration
   *   A configuration array containing information about the plugin instance.
   * @param string \$plugin_id
   *   The plugin_id for the plugin instance.
   * @param string \$plugin_definition
   *   The plugin implementation definition.
   */
  public function __construct(
        array \$configuration,
        \$plugin_id,
        \$plugin_definition
  ) {
    parent::__construct(\$configuration, \$plugin_id, \$plugin_definition);
  }

  /**
   * {@inheritdoc}
   */
  public static function create(ContainerInterface \$container, array \$configuration, \$plugin_id, \$plugin_definition) {
    return new static(
      \$configuration,
      \$plugin_id,
      \$plugin_definition
    );
  }

  /**
  * {@inheritdoc}
  */
  public function build() {
    \$build = [];

    // Implement your logic

    return \$build;
  }

}]]></content>
  <!-- @todo: set source -->
  <!-- <scope>source.python</scope> -->
</snippet>
